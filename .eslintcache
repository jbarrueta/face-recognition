[{"/home/projects/face-recognition/face-recognition/src/index.js":"1","/home/projects/face-recognition/face-recognition/src/App.js":"2","/home/projects/face-recognition/face-recognition/src/serviceWorker.js":"3","/home/projects/face-recognition/face-recognition/src/components/Signin/Signin.js":"4","/home/projects/face-recognition/face-recognition/src/components/Register/Register.js":"5","/home/projects/face-recognition/face-recognition/src/components/Navigation/Navigation.js":"6","/home/projects/face-recognition/face-recognition/src/components/Logo/Logo.js":"7","/home/projects/face-recognition/face-recognition/src/components/ImageLinkForm/ImageLinkForm.js":"8","/home/projects/face-recognition/face-recognition/src/components/FaceRecognition/FaceRecognition.js":"9","/home/projects/face-recognition/face-recognition/src/components/Rank/Rank.js":"10"},{"size":477,"mtime":1620364928969,"results":"11","hashOfConfig":"12"},{"size":5604,"mtime":1620374456627,"results":"13","hashOfConfig":"12"},{"size":5086,"mtime":1620364928969,"results":"14","hashOfConfig":"12"},{"size":2986,"mtime":1620374499029,"results":"15","hashOfConfig":"12"},{"size":3232,"mtime":1620374452487,"results":"16","hashOfConfig":"12"},{"size":932,"mtime":1620364928969,"results":"17","hashOfConfig":"12"},{"size":497,"mtime":1620364928969,"results":"18","hashOfConfig":"12"},{"size":809,"mtime":1620364928969,"results":"19","hashOfConfig":"12"},{"size":505,"mtime":1620364928969,"results":"20","hashOfConfig":"12"},{"size":339,"mtime":1620364928969,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gkrcp7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/projects/face-recognition/face-recognition/src/index.js",[],["44","45"],"/home/projects/face-recognition/face-recognition/src/App.js",["46","47"],"import React, { Component, Fragment } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Rank from \"./components/Rank/Rank\";\nimport \"./App.css\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 700,\n      },\n    },\n    color: {\n      value: \"#ffffff\",\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 0,\n        color: \"#000000\",\n      },\n      polygon: {\n        nb_sides: 5,\n      },\n    },\n    opacity: {\n      value: 0.5,\n      random: false,\n      anim: {\n        enable: false,\n        speed: 0.1,\n        opacity_min: 0.1,\n        sync: false,\n      },\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 10,\n        size_min: 0.1,\n        sync: false,\n      },\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1,\n    },\n    move: {\n      enable: true,\n      speed: 2,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200,\n      },\n    },\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"grab\",\n      },\n      onclick: {\n        enable: true,\n        mode: \"push\",\n      },\n      resize: true,\n    },\n    modes: {\n      grab: {\n        distance: 140,\n        line_linked: {\n          opacity: 1,\n        },\n      },\n      bubble: {\n        distance: 400,\n        size: 40,\n        duration: 2,\n        opacity: 8,\n        speed: 3,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n      push: {\n        particles_nb: 4,\n      },\n      remove: {\n        particles_nb: 2,\n      },\n    },\n  },\n  retina_detect: true,\n};\n\nconst app = new Clarifai.App({\n  apiKey: \"b501e1101b054bc3bf9ec78153232cd0\",\n});\n\n//{const url = \"https://samples.clarifai.com/metro-north.jpg\"}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      },\n    };\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        if (response) {\n          console.log(this.state.user.id);\n          fetch(\"/api/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    this.setState({\n      isSignedIn: route === \"signout\" ? false : route === \"home\" ? true : false,\n      route: route,\n    });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        {/* <Particles className='particles'\n          params={particlesOptions} /> */}\n        <Navigation\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n        />\n        {route === \"home\" ? (\n          <Fragment>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onSubmit}\n            />\n            <FaceRecognition imageUrl={imageUrl} box={box} />\n          </Fragment>\n        ) : route === \"signin\" ? (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        ) : (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/projects/face-recognition/face-recognition/src/serviceWorker.js",[],"/home/projects/face-recognition/face-recognition/src/components/Signin/Signin.js",[],"/home/projects/face-recognition/face-recognition/src/components/Register/Register.js",[],"/home/projects/face-recognition/face-recognition/src/components/Navigation/Navigation.js",[],"/home/projects/face-recognition/face-recognition/src/components/Logo/Logo.js",[],"/home/projects/face-recognition/face-recognition/src/components/ImageLinkForm/ImageLinkForm.js",[],"/home/projects/face-recognition/face-recognition/src/components/FaceRecognition/FaceRecognition.js",[],"/home/projects/face-recognition/face-recognition/src/components/Rank/Rank.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":13,"column":7,"nodeType":"54","messageId":"55","endLine":13,"endColumn":23},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'particlesOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]